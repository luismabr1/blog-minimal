---
import MainLayout from '../../layouts/MainLayout.astro';
import { Picture } from 'astro:assets';
import Avatar from '../../assets/images/avatar.png';
import readingTime from 'reading-time';
import GiscusComment from '../../components/GiscusComment';
import BlogPostViews from '../../components/BlogPostViews';
import * as qs from 'qs';

export async function getStaticPaths() {
    let url = import.meta.env.STRAPI_URL + "/api/posts";

    const query = qs.stringify({
  populate: {
    featuredImage: {
      fields: ["name", "width", "height", "url"],
    },
    author: {
      populate: {
        bioImage: {
          fields: ["name", "width", "height", "url"],
        },
      },
    },
    category: {
      populate: true,
    },
  },
});

const dato = await fetch(url + "?" + query)
    .then(response => {
        if (!response.ok) {
        throw new Error(`Error fetching data: ${response.status}`); // Handle error
        }
        return response.json();
    })
    .catch(error => {
        console.error('Error fetching data:', error);
        // Handle error here (e.g., return an empty array)
    });

    return dato.data.map((post: { attributes: { slug: any; }; }) => {
    return {
      params: { slug: post.attributes.slug },
      props: { post },
    };
  }) satisfies GetStaticPaths
}

const { post } = Astro.props;
/* const { Content } = await post.render(); */

console.log(post.attributes)
---

<MainLayout
    title={post.attributes.title}
    description={post.attributes.excerpt}

>
    <article
        class='flex flex-col items-start justify-center w-full max-w-2xl mx-auto mb-16'
    >
        <h1
            class='mb-4 text-3xl font-bold tracking-tight text-black md:text-5xl dark:text-white'
            transition:name='heading'
        >
            {post.attributes.title}
        </h1>
        <div
            class='flex flex-col items-start justify-between w-full mt-2 md:flex-row md:items-center'
        >
            <div class='flex items-center'>
                <Picture
                    src={Avatar}
                    class='rounded-full h-6 w-6'
                    alt='Dedsec'
                    formats={['avif', 'webp']}
                />
                <p class='ml-2 text-sm text-gray-700 dark:text-gray-300'>
                    {'Dedsec / '}
                    {
/*                         format(
                            parseISO(post.attributes.createdAt.toISOString()),
                            'MMMM dd, yyyy'
                        ) */
                    }
                </p>
            </div>
            <p
                class='mt-2 text-sm text-gray-600 dark:text-gray-400 min-w-32 md:mt-0'
            >
                {readingTime(post.attributes.readingTime).text}
                {` • `}
                <BlogPostViews
                    client:only='react'
                    slug={post.attributes.slug}
                    className='views'
                    increment
                />
            </p>
        </div>
        <div class='w-full mt-4 prose dark:prose-dark max-w-none break-words'>
            <h2>Description</h2>
            <p>{post.attributes.content}</p>

        </div>
        <GiscusComment client:only='react' />
        <div class='text-sm text-gray-700 dark:text-gray-300'>
            <a
                href={`https://mobile.twitter.com/search?q=${encodeURIComponent(
                    `https://0xdedinfosec.vercel.app/blog/${post.attributes.slug}`
                )}`}
                target='_blank'
                rel='noopener noreferrer'
            >
                {'Discuss on Twitter'}
            </a>
            {` • `}
            <a
                href='https://github.com/0xdedinfosec/0xdedinfosec-astro'
                target='_blank'
                rel='noopener noreferrer'
            >
                {'Suggest Change'}
            </a>
        </div>
    </article>
</MainLayout>
